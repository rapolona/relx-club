{%- include 'bold-product' with product, hide_action: 'break', output: 'none' -%}
{% if section.settings.boxed_layout %}{% assign _layout = 'boxed' %}{% else %}{% assign _layout = 'full' %}{% endif %}
{% assign _product_layout = 'product-slider' %}
{% assign _lazyload       = settings.use_lazyload %}

{%- assign meta_sizechart = product.metafields.c_f -%}
{%- assign key = 'image_size_chart' -%}

{%- if settings.show_product_breabcrumb -%}{% include 'breadcrumb-product-page' %}{%- endif -%}

<div itemscope itemtype="http://schema.org/Product" data-section-type="product-page" data-section-id="{{section.id}}"  style="background-color: {{ section.settings.background_color }}">
  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}" />
  <meta itemprop="image" content="{{ product.featured_image.src | product_img_url: 'grande' }}">
  <span itemprop="name" class="hide">{{ product.title }}</span>

  <div id="col-main" class="page-product {{_product_layout}} layout-{{_layout}}">
      {% if _layout == 'boxed' %}<div class="container">{% endif %}
        <div class="product-content">
          
          
<!-- special block -->
  {% for block in section.blocks %}

    {% case block.type %}
      {% when 'top_image' %}
        {%- assign _image = block.settings.image -%}
        {% unless _image == blank %}
          <div class="type-image" {{ block.shopify_attributes }}>
          	{% include 'image-style' with image: _image, image_size: '1920x' %}
          </div>
        {% endunless %}
      
      {% when 'image_with_link' %}
        {%- assign _image = block.settings.image -%}
      	{%- assign _image_link = block.settings.image_link -%}
        {% unless _image == blank %}
          <div class="type-image" {{ block.shopify_attributes }}>
            {% include 'image-style' with image: _image, image_size: '1920x' %}
          </div>
        {% endunless %}
     {% endcase %}
   {% endfor %}
<!-- end special block -->
          
          
          
          <div id="product-main">
            <div id="product-wrapper-detail" class="product-content-wrapper relx-product-page">
	            <div id="product-image" class="product-image  relx-product-carousel">
	                <div class="product-image-inner">

	                  {% if product.images.size > 0 %}
	                    <!-- <div class="slider-main-image">
	                        <div id="slide--main" class="slick-gallery-image product-carousel owl-carousel" data-owl-md="1" data-owl-xs="1" data-nav="true" data-padding-md="30">
	                           {% for image in product.images %}
	                              <div class="item">
	                                 <div class="img-zoom">
	                                    {% include 'image-style' with image_class: 'image-zoom', image_size: '2048x2048' %}
	                                 </div>
	                              </div>
	                           {% endfor %}
	                        </div>
	                     </div> -->
	                  {% else %}
	                    {{ 'image' | placeholder_svg_tag: 'placeholder-svg' }}
	                  {% endif %}
                      
                      
                      {%- assign featured_image = product.selected_or_first_available_variant.featured_image | default: product.featured_image -%}


  <img id="relxvariantimage" src="{{ featured_image | img_url: '1024x' }}" alt="{{ featured_image.alt | escape }}">


	                </div>
	            </div>


	            <div id="product-info" class="product-info relx-product-info">
					<div class="product-info-inner">
						<div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
							<meta itemprop='priceValidUntil' content='1/1/1997'>
							<meta itemprop='url' content="http://schema.org/Offer">

							{%- if product.available -%}
							<link itemprop="availability" href="http://schema.org/InStock" />
							{%- else -%}
							<link itemprop="availability" href="http://schema.org/OutOfStock" />
							{%- endif -%}

							{%- if section.settings.enable_pre_order_button -%}
								<div class="pre-order-success hide alert alert-success" role="alert">{{ 'products.product.pre_order_alert' | t }}</div>
							{%- endif -%}

							<div class="prod-title">
								<h1 itemprop="name" content="{{ product.title }}" class="page-heading">{{product.title}}</h1>
							</div>
                          
                          <div class="prod-description">
								{{ product.description }}
							</div>

                          {% capture the_snippet_review_avg %}{% render 'ssw-widget-avg-rate-profile' %}{% endcapture %}
                          {% unless the_snippet_review_avg contains 'Liquid error' %}
                          {{ the_snippet_review_avg }}
                          {% endunless %}    
							<meta itemprop="priceCurrency" content="{{ shop.currency }}" />
							{% if product.available %}
								<div class="group-price-sale">
									<div class="product-price">
										<div class="detail-price" itemprop="price" content="{{ bold_variant_price | divided_by: 100.00 }}">

											{% if bold_compare_at_price_max > bold_price %}
											<span class="price">{{ bold_price | money }}</span>
											<del class="price-compare"> {{ bold_compare_at_price | money }}</del>
											{% else %}
											<span class="price">{{ bold_price | money }}</span>
											{% endif %}

											<span class="t-price hide">{{ bold_price }}</span>
										</div>
										<div class="label-wrapper">{% include 'product-label' %}</div>

										{%- unless section.settings.tax_text == blank -%}
										<div class="price-tax">{{- section.settings.tax_text -}}</div>
										{%- endunless -%}
									</div>
								</div>
							{% endif %} 
                          
							{% include 'include-reviews' with type: 'preview_badge' %}

                          	{{product.metafields.shortdescription.shortdescription}}

							{%- if section.settings.meta_description_excerpt -%}
								{% assign meta_shortdes = product.metafields.c_f %}
								{% unless meta_shortdes.description_excerpt == blank %}
									<div class="short-description">{{ meta_shortdes.description_excerpt }}</div>
								{% endunless %}
							{%- endif -%}

							{%- if section.settings.meta_countdown_timer -%}
								{% include 'product-countdown' with show_offer: true,countdown_style: {{section.settings.countdown_style}} %}
							{%- endif -%}

							{% if product.available %}
							  <div class="group-cw clearfix">
							    {% form 'product', product, class:'product-form product-action variants' %}
                                   <input type="hidden" id="relxProductId" value="{{ product.id }}" />
							      <div id="product-action-{{ product.id }}" class="options">

							        {% assign button_arr = settings.swatch_button | downcase %}
							        {% assign color_arr  = settings.swatch_color  | downcase %}
							        {% assign image_arr  = settings.swatch_image  | downcase %}

							        {% assign swatch_styles = button_arr | append: ' , ' | append: color_arr | append: ' , ' | append: image_arr %}

							        {% for option in product.options %} 
										{% assign _option = option | downcase %}
										{% unless _option contains 'title' %}
											{% if swatch_styles contains _option %}
											  {% assign is_color  = false %}
											  {% assign use_image = false %}

											  {% if image_arr contains _option %}

											    {% assign swatch_type = 'image' %}
											    {% assign swt_shape   = settings.image_swatch_shape %}
											    {% assign is_color    = true %}
											    {% assign use_image   = true %}
											  {% elsif color_arr contains _option %}

											    {% assign swatch_type = 'color' %}
											    {% assign swt_shape   = settings.color_swatch_shape %}
											    {% assign is_color    = true %}
											  {% else %}

											    {% assign swatch_type = 'button' %}
											    {% assign swt_shape   = settings.button_swatch_shape %}
											  {% endif %}


											  {%- capture _swt_custom_extended -%}
										          {% if _option contains 'size'  %}
										            {%- render 'product.detail-snippet' ,type: 'size-chart' -%}
										          {% endif %}
											  {%- endcapture -%}

											  	{% include 'swatch' with option, is_color: is_color, use_image: use_image, swatch_type: swatch_type, swt_shape: swt_shape %}
											{% else %}
											  <script>
											    jQuery(window).on('load', function(){
											      setTimeout(function(){jQuery('.selector-wrapper.{{_option}}').css('display','block');},300);
											    });
											  </script>
											{% endif %}
										{% endunless %}

							        {% endfor %}

							        <div class="variants-wrapper">
							        	<select id="product-select-{{ product.id }}" name="id" class="hide">
							        		{% for variant in product.variants %}
{%- include 'bold-variant' with variant, hide_action: 'skip' -%}
								        		{% if variant.available %}
								        			<option {% if variant == bold_selected_or_first_available_variant %} selected="selected" {% endif %} value="{{ variant.id }}">{{ variant.title }}</option>
								        		{% else %}
								        			<option disabled="disabled">{{ variant.title }} - {{'products.product.sold_out' | t }}</option>
								        		{% endif %}
							        		{% endfor %}
							        	</select>
							        </div>
							      </div>

							      <ul class="wrap-quantity-add-cart" id="variant-out">

							        <li class="quantity-product" style="display: none !important">
							          <label>{{ 'products.product.quantity' | t }}</label>
							          <div class="qty-wrapper">
							            <span class="qty-inner">
							              <span class="qty-down" title="Decrease" data-src="#quantity">
							                <i class="demo-icon icon-minus5"></i>
							              </span>
							            </span>
							            <input type="number" id="quantity" class="item-quantity" name="quantity" value="1" />
							            <span class="qty-inner">
							              <span class="qty-up" title="Increase" data-src="#quantity">
							                <i class="demo-icon icon-plus06"></i>
							              </span>
							            </span>
							          </div>
							        </li>


							        {% if section.settings.enable_pre_order_button %}
							          <li class="pre-order hide">
							            <button type="button" class="btn-pre-order btn btn-2{% if section.settings.shaking_cart %} shaking-cart{% endif %}" data-toggle="modal" data-target="#pre-order">
							              {{- 'products.product.pre_order' | t -}}
							            </button>
							          </li>
							        {% endif %}

							        <li class="action-button">
							        	<div class="d-flex justify-content-between">
							        		<div class="btn-cart-wrap relx-btn-cart-wrap">
							        			<a href="javascript:void(0)" id="add-to-cart" class="add-to-cart btn btn-2{% if section.settings.shaking_cart %} shaking-cart{% endif %}" type="button">
							        				<i class="demo-icon icon-{{icon_cart}}"></i>{{ 'products.product.add_to_cart' | t }}
							        			</a>
							        		</div>

							        		{% if settings.enable_product_wishlist %}
								        		<div class="btn-wishlist-wrap">
								        			{% assign wishlist_link = pages["wishlist-page"].url %}
								        			<a href="{{ wishlist_link }}" class="btn btn-3 add-to-wishlist add-product-wishlist" data-handle-product="{{product.handle}}" title="{{ 'products.product.add_to_wishlist' | t }}">
								        				{{ 'products.product.add_to_wishlist' | t }}
								        			</a>
								        		</div>
							        		{% endif %}
							        	</div>
							        </li>
							      </ul>
                                
                                {% capture the_snippet_fave %}{% render 'socialshopwave-widget-fave' %}{% endcapture %}
                                {% unless the_snippet_fave contains 'Liquid error' %}
                                {{ the_snippet_fave }}
                                {% endunless %}    
							      {% if section.settings.enable_payment_button %}{% if product.metafields.product_customizer == empty %}{{ form | payment_button }}{% endif %}{% endif %}

							    {% endform %}
							  </div>

							{% else %}
							  <meta itemprop="price" content="{{ bold_price | divided_by: 100.00  }}"/>
							  <div class="variants-wrapper hide">
							    <select id="product-select-{{ product.id }}" name="id" class="hide">
							      <option disabled="disabled">None</option>
							    </select>
							  </div>
							  <div class="group-cw clearfix out-stock">
							    {% if section.settings.enable_pre_order_button %}
							      <div class="pre-order">
							        <button type="button" class="btn-pre-order btn btn-2{% if section.settings.shaking_cart %} shaking-cart{% endif %}" data-toggle="modal" data-target="#pre-order">
							          {{- 'products.product.pre_order' | t -}}
							        </button>
							      </div>
							    {% else %}
							      <button id="add-to-cart" class="sold-out btn btn-2" type="button">{{'products.product.out_stock' | t }}</button>
							    {% endif %}
							  </div>
							{% endif %}

							{{_swt_custom_extended}}

							{% if section.settings.enable_pre_order_button %}
								<div class="modal fade" id="pre-order" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
									<div class="modal-dialog modal-dialog-centered" role="document">
										<div class="modal-content">
											<div class="modal-body">
												{% form 'contact' %}

													<span class="alert-pre-order{% if form.posted_successfully? %} success{% endif %}"></span>

													<div id="pre-order-form">

														<div class="form-group">
															<label for="contactOrderName">{{'pre_order.form.name' | t }}</label>
															<input type="text" id="contactOrderName" class="form-control" value="" name="contact[name]" autofocus>
														</div>

														<div class="form-group">
															<label for="contactOrderEmail">{{'pre_order.form.email' | t }}</label>
															<input required="" type="email" id="contactOrderEmail" class="form-control" value="" name="contact[email]">
														</div>

														<div class="form-group">
															<label for="contactOrderphone">{{'pre_order.form.phone' | t }}</label>
															<input type="text" id="contactOrderphone" class="form-control" value="" name="contact[phone]">
														</div>

														<div class="form-group">
															<label for="product_name">{{'pre_order.form.prduct_name' | t }}</label>
															<input id="product_name" class="form-control" value="{{ product.title }}" name="contact[product_name]" />
														</div>

														<div class="form-group">
															<label for="contactOrderMessage">{{'pre_order.form.message' | t }}</label>
															<textarea required="" id="contactOrderMessage" class="form-control" name="contact[body]"></textarea>
														</div>

														<div class="form-actions">
															<button type="submit" class="btn btn-2">{{ 'products.product.pre_order' | t }}</button>
														</div>
													</div>

												{% endform %}

{%- render 'shappify-bdl-load-bundle' -%}

											</div>
										</div>
									</div>
								</div>
							{% endif %}

							<div class="product-info-tags">
								<ul class="product-sku-collection">
									{% if section.settings.stock_enable %}
										{% assign current_variant = bold_selected_or_first_available_variant %}
{%- include 'bold-variant' with current_variant, output: 'none' -%}
										<li id="ProductStock-{{ section.id }}" class="stock-variant{% unless current_variant.inventory_management and current_variant.inventory_quantity < 10 and current_variant.inventory_quantity > 0 or  current_variant.inventory_management and current_variant.inventory_quantity <= 0 and current_variant.incoming %} hide{% endunless %}">
											{% if current_variant.inventory_management %}
												{% if current_variant.inventory_quantity >= 10%}
													<span>{{ 'products.product.available' | t }}: {{ 'products.product.in_stock' | t }}</span>
												{% elsif current_variant.inventory_quantity < 10 and current_variant.inventory_quantity > 0 %}
													{% assign qty = current_variant.inventory_quantity %}
													<span>{{ 'products.product.stock_available' | t: count: qty }} </span>
												{% elsif current_variant.inventory_quantity == 0 or current_variant.inventory_quantity < 0 and current_variant.incoming %}
													{% if current_variant.available %}
														{% assign date = current_variant.next_incoming_date | date: "%B %-d, %Y" %}
														<span>{{ 'products.product.will_not_ship_until' | t: date: date  }}</span>
													{% else %}
														{% assign date = current_variant.next_incoming_date | date: "%B %-d, %Y" %}
														<span>{{ 'products.product.will_be_in_stock_after' | t: date: date  }}</span>
													{% endif %}
												{% endif %}
											{% endif %}
										</li>
									{% endif %}
									{%- if section.settings.show_prod_vendor -%}
										<li class="product-vendor">
											<span>{{- 'products.product.vendor' | t -}}:</span>
											<span>{{product.vendor}}</span>
										</li>
									{%- endif -%}

									{% if section.settings.show_prod_sku %}
										<li class="product-code {% if bold_selected_or_first_available_variant.sku == blank %}hide{% endif %}">
											<span>{{ 'products.product.product_code' | t }}:</span>
											<span class="sku">{{ bold_selected_or_first_available_variant.sku }}</span>
										</li>
									{% endif %}

									{%- if section.settings.show_prod_type -%}
										<li class="product-type">
											<span>{{- 'products.product.product_type' | t -}}:</span>
											<span>{{product.type}}</span>
										</li>
									{%- endif -%}
								</ul>
								<ul class="product-sku-collection">
									{% if product.collections.size > 0 and section.settings.show_prod_category %}
										<li class="category">
											<span>{{ 'products.product.category' | t }}:</span>
											{% for p_col in product.collections limit: 4 %}
											<a href="{{ p_col.url }}"><span>{{ p_col.title }}{% unless forloop.last %}, {% else %} {% if product.collections.size > 4 %}<span>...</span>{% endif %}{% endunless %}</span></a>
											{% endfor %}
										</li>
									{% endif %}

									{% if product.tags.size > 0 and section.settings.show_prod_tags %}
										<li class="tags">
											<span>{{'products.product.tag' | t }}: </span>
											{% for tag in product.tags limit: 4 %}
											<span>
												{{ tag | link_to_tag: tag | replace: 'title=', 'class="tags-prd" title=' }}
												{% unless forloop.last %}, {% else %} {% if product.tags.size > 4 %}<span>...</span>{% endif %}{% endunless %}
											</span>
											{% endfor %}
										</li>
									{% endif %}
								</ul>
							</div>
                            <!--
							<div class="product-sub-action">
  								{%- include 'fomo-notify' -%}
							</div>
							-->

							<!-- Banner product -->
							{%- assign _bn_img = section.settings.product_banner -%}
							{%- unless _bn_img == blank -%}
								<div class="banner-image">
									{%- include 'image-style', image: _bn_img -%}
								</div>
							{%- endunless -%}
							<!-- end -->

							{% assign _meta_discount_percent = product.metafields.c_f %}
							{% assign _meta_discount_code = product.metafields.c_f %}
							{% assign key = 'discount_code' %}

							{% unless _meta_discount_code.discount_code == blank %}
								<div class="hide">
									<a href="/discount/{{ _meta_discount_code.discount_code }}?redirect={{ product.url }}" class="btn-discount-code btn btn-1">
										{% if _meta_discount_percent.discount_percent == blank %}
										Get my 10% offer now
										{% else %}
										Get my {{ _meta_discount_percent.discount_percent }} offer now
										{% endif %}
									</a>
								</div>
							{% endunless %}
						</div>
					</div>
	            </div>

            </div>

            {% assign meta_bw = product.metafields.c_f %}
            {% if meta_bw.bundle_1 != blank or meta_bw.bundle_2 != blank or section.settings.product_tab_pos == 'block'%}
              <div id="product-wrapper-tabs">
                {% if meta_bw.bundle_1 != blank or meta_bw.bundle_2 != blank %}
                  {% include 'product.detail-bundled' %}
                {% endif %}
              </div>
            {% endif %}

            {% include 'product-toggle' %}
          </div>
        </div>
        {% if section.settings.product_tab_review == 'block' %}
        <div class="wrap-review">
        	<div class="review-item" id="tab_review_tabbed">
        		<div id="tab-review">{% include 'include-reviews' %}</div>
        	</div>
        </div>
        {% endif %}
    {% capture the_snippet_reviews %}{% render 'socialshopwave-widget-recommends' with 1 %}{% endcapture %}
    {% unless the_snippet_reviews contains 'Liquid error' %}
    {{ the_snippet_reviews }}
    {% endunless %}   

        {% if section.settings.enable_related_product %}{% include 'related-product' %}{% endif %}

        {% include 'include-recently-viewd', show: section.settings.enable_recently_viewd %}

    {% if _layout == 'boxed' %}</div>{% endif %}
  </div>
</div>
 
{% if section.settings.show_sticky_cart %}{% include 'include-cart-sticky' %}{% endif %}



{% for block in section.blocks %}
                {% assign alignment = block.settings.alignment %}
                {% case block.type %}
              
              
              {% when 'image' %}
	{%- assign _image = block.settings.image -%}
        {% unless _image == blank %}
          <div class="type-image" {{ block.shopify_attributes }}>
            {% include 'image-style' with image: _image, image_size: '1920x' %}
          </div>
        {% endunless %}
 {%- endcase -%}
 {%- endfor -%}


<script type="text/javascript">
  let productJson = {{ product | json | remove: '\u003E' | remove: '\u003C' | remove: '\u00a0'}};
</script>   

<script type="application/json" id="VariantJson-{{ section.id }}">
  [
    {% for variant in product.variants %}
{%- include 'bold-variant' with variant, hide_action: 'skip' -%}
      {
        "id":{{ variant.id | json }},
         "incoming": {{ variant.incoming | default: false | json }},
         "unformat_incoming_date": {{ variant.next_incoming_date | date:"%d/%m/%Y" | json }},
         "next_incoming_date": {{ variant.next_incoming_date | date: format: 'month_day_year' | json }},
         "inventory_policy": {{ variant.inventory_policy | json }},
         "inventory_quantity": {{ variant.inventory_quantity | json }}
      }{% unless forloop.last %},{% endunless %}
    {% endfor %}
  ]
</script>
<script type="text/javascript">
  jQuery(document).ready(function($) {
    var i_sections = new theme.Sections();
    i_sections.register('product-page', function(){
    	AT_Main.init_carousel($('.product-carousel'));
       $(".fancybox").length && $(".fancybox").jqPhotoSwipe();
       AT_Main.stickAddToCart();
       console.log('Ready~!');
       AT_Main.deadLine_time();
       AT_Main.delivery_time();
       AT_Main.init_CountDown();
       // $('#slide--main').data('zoom') && AT_Main.init_zoom_img();
       PT_Main.init();
    });
    {% if  current_variant.id > 0 %}
    let currentVariant = {{ current_variant.id }};
    {% else %}
    let currentVariant = 0;
    {% endif %}
    jQuery("body").on('change', '.single-option-selector', function() {
    	let flavor = jQuery('.single-option-selector').val();
      	let vId = jQuery('select[name=id] option:contains('+ flavor +')').val();
      	if(currentVariant!=vId){
         // window.location = '{{ shop.url }}{{ collection.url }}{{ product.url }}?variant=' + vId;
         jQuery('select[name=id] option:contains('+ flavor +')').prop('selected', true);
        }
    });
          
    jQuery("body").on('click', 'input[name="option-0"]', function() {
          
    	let color = $('input[name="option-0"]:checked').val();
      	let vId = jQuery('select[name=id] option:contains('+ color +')').val();
      	//if(currentVariant!=vId){
          //window.location = '{{ shop.url }}{{ collection.url }}{{ product.url }}?variant=' + vId;
       // }
        for (let [key, value] of Object.entries(productJson.variants)) {
          	if(value.id==vId){
              	let imgSrc= value.featured_image.src,
                    variantTitle = value.name;
                $("#relxvariantimage").attr("src",imgSrc);
                $(".prod-title h1").text(variantTitle);
              jQuery('select[name=id] option:contains('+ color +')').prop('selected', true);
          	}
  	    }
    });
          
          
    

  });

  // initialize multi selector for product
  var PT_Main = {
    init : function(){
      $(window).load(function() {
        $(".qty-inner .qty-up").on("click", function() {
            var oldValue = $("#quantity").val(),
                newVal = 1;
            newVal = parseInt(oldValue) + 1;
            $("#quantity").val(newVal);
        });
        $(".qty-inner .qty-down").on("click", function() {
            var oldValue = $("#quantity").val();
            if (oldValue > 1) {
                newVal = 1;
                newVal = parseInt(oldValue) - 1;
                $("#quantity").val(newVal);
            }
        });
        var variantProd = JSON.parse($('#VariantJson-{{ section.id }}').html());
         /* selectCallback */
        var selectOptionsCallback = function(variant, selector) {
          if (variant && variant.available) {
              var form = jQuery('#' + selector.domIdPrefix).closest('form');
              for (var i = 0, length = variant.options.length; i < length; i++) {
                  var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] + '"]');
                  if (radioButton.size()) {
                      radioButton.get(0).checked = true;
                  }
              }
              if (variant.featured_image) {
                var originalImage = jQuery(".slider-for-03 .slick-current .image-zoom");
                var newImage      = variant.featured_image;
                var element       = originalImage[0]
                ,groupImage       = String(variant.featured_image.alt);

                groupImage != 'null' && AT_Main.productPage_variantFilter(groupImage);

                Shopify.Image.switchImage(newImage, element, function (newImageSizedSrc, newImage, element) {
                  $('.slider-filter .thumb-zoom').each(function(){
                    let _img = $(this).data('zoom-size').replace('_2048x2048@2x','');
                    if (_img == newImageSizedSrc.replace('https:','')) {
                      $(this).parents('.slick-slide').trigger('click');
                      if (AT_Main.getWidthBrowser() < 768) {
                        let w_thumb  = jQuery('#slide--thumbs').outerWidth();
                        let w_track = jQuery('#slide--thumbs .slick-track').outerWidth();
                        (w_track <= w_thumb) && jQuery('#slide--thumbs .slick-slide').length <= 5 && jQuery('#slide--thumbs .slick-track').addClass('no-translate3d');
                      }
                      return;
                    }
                  })
                });
              }
            $('.shipping-time').removeClass('hide');
          }
          var add_to_cart = '#add-to-cart'
              ,$price = '.detail-price'
              ,$stock = $('.stock-variant');

          if ($stock.length) {
            if (!variant || !variant.inventory_management) {$stock.addClass('hide');$('.shipping-time').removeClass('hide');}

            if (variant && variant.featured_image) {
              var variant_stock = variantProd.find(item => item.id === variant.id), text='';

              if (variant.available) {
                if (variant_stock.inventory_quantity >= 10) {
                  text = "<span>{{ 'products.product.available' | t }}: {{ 'products.product.in_stock' | t }}</span>";
                  $stock.removeClass('hide');
                }else if (variant_stock.inventory_quantity < 10 && variant_stock.inventory_quantity > 0) {

                  text = "<span>{{ 'products.product.available' | t }}: {{ 'products.product.stock_available' | t: count: 1}}</span>";
                  text = text.replace('1','<strong>'+variant_stock.inventory_quantity+'</strong>');
                  $stock.removeClass('hide');
                  $('.shipping-time').removeClass('hide');

                }else if (variant_stock.inventory_quantity <= 0 && variant_stock.incoming) {
                  $('.shipping-time').addClass('hide');

                  text = "{{ 'products.product.unavailable' | t }}: <span>{{ 'products.product.will_not_ship_until' | t: date: '[date]' }}</span>";
                  text.replace('[date]','<strong>'+variant_stock.next_incoming_date+'</strong>');
                  $stock.removeClass('hide');

                }else{// If there's more than 10 available, hide stock
                  $stock.addClass('hide');
                  $('.shipping-time').removeClass('hide');
                }
              }
              else{
                if (variant_stock.incoming) {
                  text = "<span>{{ 'products.product.unavailable' | t }}: {{ 'products.product.will_be_in_stock_after' | t: date: '[date]' }}</span>";
                  text.replace('[date]','<strong>'+variant_stock.next_incoming_date+'</strong>');
                  $stock.removeClass('hide');
                  $('.shipping-time').addClass('hide');
                }
                else{// If there is no stock incoming, hide stock
                  $stock.addClass('hide');
                  $('.shipping-time').removeClass('hide');
                }
              }
              $stock.html(text);
            }
          }

          if (variant && variant.available) {
            // selected a valid variant
            $(add_to_cart).removeClass('disabled').removeAttr('disabled').html('{{ "products.product.add_to_cart" | t }}');
            // remove unavailable class from add-to-cart button, and re-enable button

            if (variant.compare_at_price == null) {
              $($price).html('<span class="price">' + Shopify.formatMoney(variant.price, '{{shop.money_format}}') + '</span>');

              {% if settings.enable_saleoff_label %}
                jQuery("#label-sale").html('').hide();
              {% endif %}
            } else {
              $($price).html('<span class="price">' + Shopify.formatMoney(variant.price, '{{shop.money_format}}') + '</span>' + '<del class="price-compare">' + Shopify.formatMoney(variant.compare_at_price, '{{shop.money_format}}') + '</del>');

              {% if settings.enable_saleoff_label %}
                jQuery("#label-sale").html('<span class="sale-text">{{ "products.label.sale" | t }}</span>').show();
              {% endif %}
            }
            {% if section.settings.enable_pre_order_button %}
              $('.pre-order').addClass('hide');
              $('.quantity-product, .shopify-payment-button, .action-button').removeClass('hide');
            {% endif %}
            /* Update currency */
            {% if settings.show_multiple_currencies %}
              currenciesCallbackSpecial('#product-info span.money');
            {% endif %}
          }
          else {
            $(add_to_cart).attr('disabled', 'disabled'); // set add-to-cart button to unavailable class and disable button
            var message = variant ? "{{'products.product.sold_out' | t }}" : "{{'products.product.unavailable' | t }}";
            $(add_to_cart).html(message);

            {% if section.settings.enable_pre_order_button %}
              $('.pre-order').removeClass('hide');
              $('.quantity-product, .shopify-payment-button, .action-button').addClass('hide');


              let temp = $('.page-product .pre-order').html();
              $('.add-to-cart-sticky').html(temp).css('text-align', 'center');
              $('.add-to-cart-sticky').on('click','.btn-pre-order',function(){
                $('.page-product .btn-pre-order').trigger('click');
                return false;
              });

            {% else %}
              $('.add-to-cart-sticky').css('display', 'none');
            {% endif %}
          }

          {% if section.settings.show_prod_sku %}
            (variant && variant.sku) ? jQuery(".sku").html(variant.sku).parent().show() : jQuery(".sku").parent().hide();
          {% endif %}
        };

        {% if bold_variants_size > 0 %}
        new Shopify.OptionSelectors("product-select-{{ product.id }}", {product: {{ product | json | remove: '\u003E' | remove: '\u003C' | remove: '\u00a0'}}, onVariantSelected: selectOptionsCallback, enableHistoryState: true});
        {% endif %}

        // Add label if only one product option
        {% if product.options.size == 1 and product.options.first != 'Title' %}
          $('.selector-wrapper:eq(0)').prepend('<label>{{ product.options.first | escape }}</label>');
        {% endif %}

        // Hide selectors if we only have 1 variant and its title contains 'Default'.
        {% if bold_variants_size == 1 and bold_selected_or_first_available_variant.title contains 'Default' %}
          $('.selector-wrapper').hide();
        {% endif %}
      });
    }
  }

                     
                     
{% if product.variants.size > 1 %}  
                   
{% endif %}
     
                     
                     
                     
                     
</script>
{%- for block in section.blocks -%}{%- if block.type == 'discount_popup' -%}{%- include 'layer-discount-modal' -%}{%- break -%}{%- endif -%}{%- endfor -%}
{% schema %}
{
	"name":"Product Slider",
	"settings":[
		{
			"type":"header",
			"content":"LAYOUT"
		},
		{
			"type":"checkbox",
			"id":"boxed_layout",
			"label":"Boxed layout",
			"default":true
		},
		{
			"type":"color",
			"id":"background_color",
			"label":"Background color",
			"default":"#ffffff"
		},
		{
			"type":"header",
			"content":"Add to cart"
		},
		{
			"type":"checkbox",
			"id":"shaking_cart",
			"label":"Show Shaking Cart Button",
			"default":true
		},
		{
			"type":"checkbox",
			"id":"enable_payment_button",
			"label":"Show Dynamic Checkout button",
			"info":"Lets customers check out directly using a familiar payment method. [Learn more](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
			"default":true
		},
		{
			"type":"checkbox",
			"id":"enable_pre_order_button",
			"label":"Show Pre-order button",
			"default":true
		},
		{
			"type":"checkbox",
			"id":"show_sticky_cart",
			"label":"Show sticky cart"
		},
		{
			"type":"select",
			"id":"sticky_cart_position",
			"label":"Sticky cart position",
			"default":"bottom",
			"options":[
				{
					"value":"top",
					"label":"Top"
				},
				{
					"value":"bottom",
					"label":"Bottom"
				}
			]
		},
		{
			"type":"text",
			"id":"tax_text",
			"label":"Excl. tax or Incl. tax."
		},
		{
			"type":"header",
			"content":"Product Summary"
		},
		{
			"type":"checkbox",
			"id":"stock_enable",
			"label":"Show inventory remaining"
		},
		{
			"type":"checkbox",
			"id":"show_prod_tags",
			"label":"Show Product Tags"
		},
		{
			"type":"checkbox",
			"id":"show_prod_sku",
			"label":"Show Product SKU"
		},
		{
			"type":"checkbox",
			"id":"show_prod_category",
			"label":"Show Product Category"
		},
		{
			"type":"checkbox",
			"id":"show_prod_vendor",
			"label":"Show Product Vendor"
		},
		{
			"type":"checkbox",
			"id":"show_prod_type",
			"label":"Show Product Type"
		},
		{
			"type":"image_picker",
			"id":"image_size_chart",
			"label":"Size chart",
			"info":"Blank to hide"
		},
		{
			"type":"url",
			"id":"size_chart_page",
			"label":"Size Chart Page",
			"info":"Blank to hide"
		},
		{
			"type":"image_picker",
			"id":"product_banner",
			"label":"Secure Image Protection",
			"info":"Blank to hide"
		},
		{
			"type":"paragraph",
			"content":"Metafield allow you to attach metadata, which is additional information to a store's resources. Please install [Advanced Custom Field](https:\/\/apps.shopify.com\/advanced-custom-field) to edit content."
		},
		{
			"type":"checkbox",
			"id":"meta_countdown_timer",
			"label":"Metafields Countdown Timer: c_f.countdown_timer",
			"default":true,
			"info":"Please make sure you config product's compare price to make this label visible [(?)](http:\/\/help.shopify.com\/manual\/products\/promoting-marketing\/sales)"
		},
		{
			"type":"range",
			"id":"countdown_style",
			"label":"Countdown timer styles",
			"min":1,
			"max":6,
			"step":1,
			"default":1
		},
		{
			"type":"checkbox",
			"id":"meta_description_excerpt",
			"label":"Metafields Description Excerpt: c_f.description_excerpt",
			"default":true
		},
		{
			"type":"header",
			"content":"Product Review"
		},
		{
			"type":"select",
			"id":"product_tab_review",
			"label":"Product Review Position",
			"options":[
				{
					"value":"hide",
					"label":"Hide"
				},
				{
					"value":"block",
					"label":"Separate blocks"
				},
				{
					"value":"inside",
					"label":"Inside the product tabs"
				}
			],
			"default":"inside"
		},
		{
			"type":"header",
			"content":"Related Product"
		},
		{
			"type":"checkbox",
			"id":"enable_related_product",
			"label":"Enable Related Product",
			"default":true
		},
		{
			"type":"text",
			"id":"heading_related_product",
			"label":"Title",
			"default":"Related Products"
		},
		{
			"type":"select",
			"id":"related_product_data",
			"label":"How to select related products",
			"options":[
				{
					"label":"Same Collection",
					"value":"collection"
				},
				{
					"label":"Same Vendor",
					"value":"vendors"
				},
				{
					"label":"Same Tag",
					"value":"tags"
				}
			],
			"default":"collection"
		},
		{
			"type":"text",
			"id":"items_resp",
			"label":"Responsive number of items",
			"placeholder":"xl,lg,md,sm,xs",
			"info":"You can define the number of slides to display for various breakpoint settings. e.g. 4 items on desktop, 3 items on tablet and 2 items on mobile. Input: 4,3,2. [Read more](https:\/\/help.arenacommerce.com\/customization\/grid.html)",
			"default":"4,2"
		},
		{
			"type":"checkbox",
			"id":"padding_item",
			"label":"Spacing items",
			"default":true
		},
		{
			"type":"range",
			"id":"related_product_limit",
			"label":"Limited items",
			"min":3,
			"max":20,
			"step":1,
			"default":15,
			"info":"Use for Same Collection"
		},
		{
			"type":"header",
			"content":"RECENTLY VIEWED"
		},
		{
			"type":"checkbox",
			"id":"enable_recently_viewd",
			"label":"Show Recently Viewed",
			"default":true
		}
	],
	"blocks":[
     {
         "type":"image", 
         "name":"Image",
         "settings":[
            {
               "type":"image_picker",
               "id":"image",
               "label":"Image"
            }
         ]
      },
	  {
         "type":"image_with_link",
         "name":"Image with Link",
         "settings":[
            {
               "type":"image_picker",
               "id":"image",
               "label":"Image"
            },{
          		"type": "url",
         		 "id": "image_link",
          		"label": "Image link"
        	}
         ]
      },{
			"type":"description",
			"limit":1,
			"name":"Tab Description",
			"settings":[
				{
					"type":"paragraph",
					"content":"Standard tab are created base on your Product description content. If you'd like unique set of tabs for each product you shoud use heading 5 function"
				},
				{
					"type":"checkbox",
					"id":"multi-tab",
					"label":"Use Multi-tabs with heading 5 tag",
					"default":true,
					"info":"We use heading 5 in Product's description to seperate Multi-tabs, each <h5>Tabs Title</h5> will be considered as content seperator and tabs title"
				}
			]
		},
		{
			"type":"page",
			"name":"Tab Description by Page",
			"settings":[
				{
					"type":"paragraph",
					"content":"Static tab are created base on Page content. It's usefull for some content that is same for all the products like Shipping term, Size Guide, and so on"
				},
				{
					"type":"text",
					"id":"page_title",
					"label":"Heading"
				},
				{
					"type":"page",
					"id":"page",
					"label":"Select a Page"
				}
			]
		},
      {
         "type":"tab_metafield",
         "name":"Tab Description by ACF",
         "settings": [
            {
               "type":"paragraph",
               "content":"Metafield allow you to attach metadata, which is additional information to a store's resources. Please install [Advanced Custom Field](https:\/\/apps.shopify.com\/advanced-custom-field) to edit content."
            },
            {
               "type":"paragraph",
               "content":"Metafield Tab Description Heading: c_f.heading"
            },
            {
               "type":"paragraph",
               "content":"Metafield Tab Description Content: c_f.description"
            }
         ]
      },
		{
			"type":"discount_popup",
			"name":"Discount Popup",
			"limit":1,
			"settings":[
				{
					"type":"image_picker",
					"id":"discount_popup",
					"label":"Background image"
				},
				{
					"type":"textarea",
					"id":"discount_popup_text_1",
					"label":"Text 01",
					"default":"Wait a second..."
				},
				{
					"type":"textarea",
					"id":"discount_popup_text_2",
					"label":"Text 02",
					"default":"Don't you want discount off"
				}
			]
		},
		{
			"type":"fomo_inline",
			"name":"Fomo Notify (Inline)",
			"settings":[
				{
					"type":"text",
					"id":"title",
					"label":"Block label"
				},
	            {
	               "type":"text",
	               "id":"fomo_margin",
	               "label":"Fomo margin",
	               "placeholder":"E.g: 5px 20px 5px 20px",
	               "info":"Order: Top Right Bottom Left"
	            },
				{
					"type":"header",
					"content":"Fomo Settings"
				},
				{
					"type":"range",
					"id":"cookie_history",
					"label":"Remove cookie every",
					"min":10,
					"max":60,
					"step":5,
					"default":30,
					"unit":"s"
				},
				{
					"type":"text",
					"id":"loop_time",
					"label":"Loop timer",
					"default":"20"
				},
				{
					"type":"range",
					"id":"deviation_value",
					"label":"Standard Deviation",
					"info":"Value range of counter after reload page (Percent * The previous value)",
					"min":10,
					"max":90,
					"step":10,
					"default":20,
					"unit":"%"
				},
				{
					"type":"text",
					"id":"count_min_max",
					"label":"Counter Min - Max",
					"default":"60;100",
					"placeholder":"Min ; Max"
				},
				{
					"type":"checkbox",
					"id":"city_manual",
					"label":"Use Manual Cities List"
				},
				{
					"type":"paragraph",
					"content":"Show manual cities list instead of nearby cities detect with GEOIP service."
				},
				{
					"type":"paragraph",
					"content":"Change list in Theme settings/ Fomo Popups/ Manual Cities List"
				},
				{
					"type":"header",
					"content":"Image settings"
				},
				{
					"type":"select",
					"id":"image_pos",
					"label":"Position",
					"default":"left",
					"options":[
						{
							"value":"left",
							"label":"Left"
						},
						{
							"value":"center",
							"label":"Center"
						},
						{
							"value":"right",
							"label":"Right"
						}
					]
				},
				{
					"type":"select",
					"id":"image_size",
					"label":"Image size",
					"default":"small",
					"options":[
						{
							"value":"small",
							"label":"Small"
						},
						{
							"value":"medium",
							"label":"Medium"
						},
						{
							"value":"large",
							"label":"Large"
						}
					]
				},
				{
					"type":"image_picker",
					"id":"noti_image",
					"label":"Image",
					"info":"Blank to hide"
				},
				{
					"type":"checkbox",
					"id":"use_product_image",
					"label":"Use Image from Products random"
				},
				{
					"type":"text",
					"id":"image_radius",
					"label":"Image Rounded corners",
					"default":"4px"
				},
				{
					"type":"text",
					"id":"image_margin",
					"label":"Image margin",
					"placeholder":"E.g: 5px 20px 5px 20px",
					"info":"Order: Top Right Bottom Left"
				},
				{
					"type":"header",
					"content":"Icon settings"
				},
				{
					"type":"text",
					"id":"icon_name",
					"label":"Font icon name",
					"info":"Use [icon] to place in your content"
				},
				{
					"type":"text",
					"id":"ic_fs",
					"label":"Icon font size",
					"default":"18px"
				},
				{
					"type":"color",
					"id":"ic_cl",
					"label":"Icon color",
					"default":"#222222"
				},
				{
					"type":"header",
					"content":"Line 1 settings"
				},
				{
					"type":"text",
					"id":"fomo_content_lh_1",
					"label":"Line 1 line height"
				},
				{
					"type":"text",
					"id":"fomo_content_padding_1",
					"label":"Line 1 Padding",
					"placeholder":"E.g: 5px 20px 5px 20px",
					"info":"Order: Top Right Bottom Left"
				},
				{
					"type":"text",
					"id":"text_fs_1",
					"label":"Text font size",
					"default":"14px"
				},
				{
					"type":"text",
					"id":"link_fs_1",
					"label":"Link font size",
					"default":"14px"
				},
				{
					"type":"select",
					"id":"text_fw_1",
					"label":"Text font weight",
					"default":"300",
					"options":[
						{
							"value":"100",
							"label":"100 Thin (Hairline)"
						},
						{
							"value":"200",
							"label":"200 Extra Light (Ultra Light)"
						},
						{
							"value":"300",
							"label":"300 Light"
						},
						{
							"value":"400",
							"label":"400 Normal"
						},
						{
							"value":"500",
							"label":"500 Medium"
						},
						{
							"value":"600",
							"label":"600 Semi Bold (Demi Bold)"
						},
						{
							"value":"700",
							"label":"700 Bold"
						},
						{
							"value":"800",
							"label":"800 Extra Bold (Ultra Bold)"
						},
						{
							"value":"900",
							"label":"900 Black (Heavy)"
						}
					]
				},
				{
					"type":"select",
					"id":"link_fw_1",
					"label":"Link font weight",
					"default":"300",
					"options":[
						{
							"value":"100",
							"label":"100 Thin (Hairline)"
						},
						{
							"value":"200",
							"label":"200 Extra Light (Ultra Light)"
						},
						{
							"value":"300",
							"label":"300 Light"
						},
						{
							"value":"400",
							"label":"400 Normal"
						},
						{
							"value":"500",
							"label":"500 Medium"
						},
						{
							"value":"600",
							"label":"600 Semi Bold (Demi Bold)"
						},
						{
							"value":"700",
							"label":"700 Bold"
						},
						{
							"value":"800",
							"label":"800 Extra Bold (Ultra Bold)"
						},
						{
							"value":"900",
							"label":"900 Black (Heavy)"
						}
					]
				},
				{
					"type":"color",
					"id":"text_color_1",
					"label":"Text color",
					"default":"#888888"
				},
				{
					"type":"color",
					"id":"link_color_1",
					"label":"Tink color",
					"default":"#1A1A1A"
				},
				{
					"type":"header",
					"content":"Line 2 settings"
				},
				{
					"type":"text",
					"id":"fomo_content_lh_2",
					"label":"Line 2 line height"
				},
				{
					"type":"text",
					"id":"fomo_content_padding_2",
					"label":"Line 2 Padding",
					"placeholder":"E.g: 5px 20px 5px 20px",
					"info":"Order: Top Right Bottom Left"
				},
				{
					"type":"text",
					"id":"text_fs_2",
					"label":"Text font size",
					"default":"14px"
				},
				{
					"type":"text",
					"id":"link_fs_2",
					"label":"Link font size",
					"default":"14px"
				},
				{
					"type":"select",
					"id":"text_fw_2",
					"label":"Text font weight",
					"default":"300",
					"options":[
						{
							"value":"100",
							"label":"100 Thin (Hairline)"
						},
						{
							"value":"200",
							"label":"200 Extra Light (Ultra Light)"
						},
						{
							"value":"300",
							"label":"300 Light"
						},
						{
							"value":"400",
							"label":"400 Normal"
						},
						{
							"value":"500",
							"label":"500 Medium"
						},
						{
							"value":"600",
							"label":"600 Semi Bold (Demi Bold)"
						},
						{
							"value":"700",
							"label":"700 Bold"
						},
						{
							"value":"800",
							"label":"800 Extra Bold (Ultra Bold)"
						},
						{
							"value":"900",
							"label":"900 Black (Heavy)"
						}
					]
				},
				{
					"type":"select",
					"id":"link_fw_2",
					"label":"Link font weight",
					"default":"300",
					"options":[
						{
							"value":"100",
							"label":"100 Thin (Hairline)"
						},
						{
							"value":"200",
							"label":"200 Extra Light (Ultra Light)"
						},
						{
							"value":"300",
							"label":"300 Light"
						},
						{
							"value":"400",
							"label":"400 Normal"
						},
						{
							"value":"500",
							"label":"500 Medium"
						},
						{
							"value":"600",
							"label":"600 Semi Bold (Demi Bold)"
						},
						{
							"value":"700",
							"label":"700 Bold"
						},
						{
							"value":"800",
							"label":"800 Extra Bold (Ultra Bold)"
						},
						{
							"value":"900",
							"label":"900 Black (Heavy)"
						}
					]
				},
				{
					"type":"color",
					"id":"text_color_2",
					"label":"Text color",
					"default":"#888888"
				},
				{
					"type":"color",
					"id":"link_color_2",
					"label":"Tink color",
					"default":"#1A1A1A"
				},
				{
					"type":"header",
					"content":"Fomo Content"
				},
				{
					"type":"paragraph",
					"content":"Use keywords to created random content, place in your content. [cities], [number], [products], [time]"
				},
				{
					"type":"textarea",
					"id":"text_header",
					"label":"Line 1",
					"default":"Fomo Lorem ipsum"
				},
				{
					"type":"select",
					"id":"head_alignment",
					"label":"Line 1 alignment",
					"default":"left",
					"options":[
						{
							"value":"left",
							"label":"Left"
						},
						{
							"value":"center",
							"label":"Center"
						},
						{
							"value":"right",
							"label":"Right"
						}
					]
				},
				{
					"type":"textarea",
					"id":"text_body",
					"label":"Line 2"
				},
				{
					"type":"select",
					"id":"body_alignment",
					"label":"Line 2 alignment",
					"default":"left",
					"options":[
						{
							"value":"left",
							"label":"Left"
						},
						{
							"value":"center",
							"label":"Center"
						},
						{
							"value":"right",
							"label":"Right"
						}
					]
				}
			]
		},
		{
			"type":"fomo_shipping",
			"name":"Fomo Notify (Shipping)",
			"limit":1,
			"settings":[
				{
					"type":"text",
					"id":"title",
					"label":"Block label"
				},
	            {
	               "type":"text",
	               "id":"fomo_margin",
	               "label":"Fomo margin",
	               "placeholder":"E.g: 5px 20px 5px 20px",
	               "info":"Order: Top Right Bottom Left"
	            },
				{
					"type":"header",
					"content":"Order and Shipping Time",
					"info":"Working days"
				},
				{
					"type":"range",
					"id":"deadline_day",
					"label":"Deadline each day",
					"default":14,
					"min":0,
					"max":23,
					"step":1,
					"unit":"h"
				},
				{
					"type":"range",
					"id":"delivery_time",
					"label":"Delivery time",
					"default":2,
					"min":1,
					"max":7,
					"step":1,
					"unit":"d"
				}
			]
		}
	]
}
{% endschema %} 